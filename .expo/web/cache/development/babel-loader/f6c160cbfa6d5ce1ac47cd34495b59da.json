{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"D:\\\\ALL LANGs\\\\projects\\\\PokeGameFront\\\\screens\\\\login.tsx\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport React, { useState, useEffect } from \"react\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport Pressable from \"react-native-web/dist/exports/Pressable\";\nimport Vibration from \"react-native-web/dist/exports/Vibration\";\nimport { BarCodeScanner } from \"expo-barcode-scanner\";\nimport { Text, View } from \"../components/Themed\";\nimport { FontAwesome } from \"@expo/vector-icons\";\nexport default function TabOneScreen(_ref) {\n  var navigation = _ref.navigation;\n\n  var _useState = useState(null),\n      _useState2 = _slicedToArray(_useState, 2),\n      hasPermission = _useState2[0],\n      setHasPermission = _useState2[1];\n\n  var _useState3 = useState(false),\n      _useState4 = _slicedToArray(_useState3, 2),\n      scanned = _useState4[0],\n      setScanned = _useState4[1];\n\n  var _useState5 = useState(\"Not yet scanned\"),\n      _useState6 = _slicedToArray(_useState5, 2),\n      text = _useState6[0],\n      setText = _useState6[1];\n\n  var askForCameraPermission = function askForCameraPermission() {\n    (function _callee() {\n      var _await$BarCodeScanner, status;\n\n      return _regeneratorRuntime.async(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return _regeneratorRuntime.awrap(BarCodeScanner.requestPermissionsAsync());\n\n            case 2:\n              _await$BarCodeScanner = _context.sent;\n              status = _await$BarCodeScanner.status;\n              setHasPermission(status === \"granted\");\n\n            case 5:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    })();\n  };\n\n  useEffect(function () {\n    askForCameraPermission();\n  }, []);\n\n  var handleBarCodeScanned = function handleBarCodeScanned(_ref2) {\n    var type = _ref2.type,\n        data = _ref2.data;\n    Vibration.vibrate();\n    navigation.navigate(\"Play\");\n    setScanned(true);\n    setText(data);\n  };\n\n  if (hasPermission === null) {\n    return React.createElement(View, {\n      style: styles.container,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 7\n      }\n    }, React.createElement(Text, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }\n    }, \"Requesting for camera permission\"));\n  }\n\n  if (hasPermission === false) {\n    return React.createElement(View, {\n      style: styles.container,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 7\n      }\n    }, React.createElement(Text, {\n      style: {\n        margin: 10\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }\n    }, \"No access to camera\"), React.createElement(Button, {\n      title: \"Allow Camera\",\n      onPress: function onPress() {\n        return askForCameraPermission();\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }\n    }));\n  }\n\n  return React.createElement(View, {\n    style: styles.container,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 5\n    }\n  }, React.createElement(View, {\n    style: styles.titleContainer,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }\n  }, React.createElement(Text, {\n    style: styles.title,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 9\n    }\n  }, \" Log in via QR Code\"), React.createElement(Pressable, {\n    onPress: function onPress() {\n      return navigation.navigate(\"Modal\");\n    },\n    style: function style(_ref3) {\n      var pressed = _ref3.pressed;\n      return {\n        opacity: pressed ? 0.5 : 1\n      };\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 9\n    }\n  }, React.createElement(FontAwesome, {\n    name: \"info-circle\",\n    size: 25,\n    style: {\n      marginRight: 15\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 11\n    }\n  }))), React.createElement(View, {\n    style: styles.barcodebox,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }\n  }, React.createElement(BarCodeScanner, {\n    onBarCodeScanned: scanned ? undefined : handleBarCodeScanned,\n    style: {\n      height: 800,\n      width: 800\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 9\n    }\n  })), React.createElement(Text, {\n    style: styles.maintext,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 7\n    }\n  }, text), scanned && React.createElement(Button, {\n    title: \"Scan again?\",\n    onPress: function onPress() {\n      return setScanned(false);\n    },\n    color: \"tomato\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 9\n    }\n  }), React.createElement(Button, {\n    title: \"Press me\",\n    onPress: function onPress() {\n      return navigation.navigate(\"Play\");\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 7\n    }\n  }));\n}\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    alignItems: \"center\",\n    justifyContent: \"center\"\n  },\n  header: {\n    color: \"yellow\",\n    fontFamily: \"space-mono\",\n    fontSize: 30,\n    fontWeight: \"bold\"\n  },\n  center: {\n    backgroundColor: \"#fff\",\n    borderRadius: 40,\n    alignItems: \"center\",\n    justifyContent: \"center\"\n  },\n  image: {\n    flex: 1,\n    justifyContent: \"center\"\n  },\n  maintext: {\n    fontSize: 16,\n    margin: 20\n  },\n  barcodebox: {\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    height: 400,\n    width: 300,\n    overflow: \"hidden\",\n    borderRadius: 30\n  },\n  titleContainer: {\n    display: \"flex\",\n    backgroundColor: \"transparent\",\n    flexDirection: \"row\",\n    justifyContent: \"space-between\",\n    alignItems: \"center\",\n    width: \"65%\",\n    marginBottom: 20\n  },\n  title: {\n    fontSize: 20\n  }\n});","map":{"version":3,"sources":["D:/ALL LANGs/projects/PokeGameFront/screens/login.tsx"],"names":["React","useState","useEffect","BarCodeScanner","Text","View","FontAwesome","TabOneScreen","navigation","hasPermission","setHasPermission","scanned","setScanned","text","setText","askForCameraPermission","requestPermissionsAsync","status","handleBarCodeScanned","type","data","Vibration","vibrate","navigate","styles","container","margin","titleContainer","title","pressed","opacity","marginRight","barcodebox","undefined","height","width","maintext","StyleSheet","create","flex","alignItems","justifyContent","header","color","fontFamily","fontSize","fontWeight","center","backgroundColor","borderRadius","image","overflow","display","flexDirection","marginBottom"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport {\n  StyleSheet,\n  Button,\n  Pressable,\n  ImageBackground,\n  Vibration,\n} from \"react-native\";\nimport { BarCodeScanner } from \"expo-barcode-scanner\";\nimport { Text, View } from \"../components/Themed\";\nimport { RootTabScreenProps } from \"../types\";\nimport { FontAwesome } from \"@expo/vector-icons\";\n\nexport default function TabOneScreen({\n  navigation,\n}: RootTabScreenProps<\"TabOne\">) {\n  const [ hasPermission, setHasPermission ] = useState(null);\n  const [ scanned, setScanned ] = useState(false);\n  const [ text, setText ] = useState(\"Not yet scanned\");\n\n  const askForCameraPermission = () => {\n    (async () => {\n      const { status } = await BarCodeScanner.requestPermissionsAsync();\n      setHasPermission(status === \"granted\");\n    })();\n  };\n\n  useEffect(() => {\n    askForCameraPermission();\n  }, []);\n\n  const handleBarCodeScanned = ({ type, data }) => {\n    //TODO:VALIDATION GOES HERE\n    Vibration.vibrate();\n    navigation.navigate(\"Play\");\n    setScanned(true);\n    setText(data);\n  };\n\n  if (hasPermission === null) {\n    return (\n      <View style={styles.container}>\n        <Text>Requesting for camera permission</Text>\n      </View>\n    );\n  }\n  if (hasPermission === false) {\n    return (\n      <View style={styles.container}>\n        <Text style={{ margin: 10 }}>No access to camera</Text>\n        <Button\n          title={\"Allow Camera\"}\n          onPress={() => askForCameraPermission()}\n        />\n      </View>\n    );\n  }\n  return (\n    <View style={styles.container}>\n      <View style={styles.titleContainer}>\n        <Text style={styles.title}> Log in via QR Code</Text>\n        <Pressable\n          onPress={() => navigation.navigate(\"Modal\")}\n          style={({ pressed }) => ({\n            opacity: pressed ? 0.5 : 1,\n          })}\n        >\n          <FontAwesome\n            name=\"info-circle\"\n            size={25}\n            style={{ marginRight: 15 }}\n          />\n        </Pressable>\n      </View>\n      <View style={styles.barcodebox}>\n        <BarCodeScanner\n          onBarCodeScanned={scanned ? undefined : handleBarCodeScanned}\n          style={{ height: 800, width: 800 }}\n        />\n      </View>\n      <Text style={styles.maintext}>{text}</Text>\n\n      {scanned && (\n        <Button\n          title={\"Scan again?\"}\n          onPress={() => setScanned(false)}\n          color=\"tomato\"\n        />\n      )}\n      <Button title=\"Press me\" onPress={() => navigation.navigate(\"Play\")} />\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n\n    alignItems: \"center\",\n    justifyContent: \"center\",\n  },\n  header: {\n    color: \"yellow\",\n    fontFamily: \"space-mono\",\n    fontSize: 30,\n    fontWeight: \"bold\",\n  },\n  center: {\n    backgroundColor: \"#fff\",\n    borderRadius: 40,\n    alignItems: \"center\",\n    justifyContent: \"center\",\n  },\n  image: {\n    flex: 1,\n    justifyContent: \"center\",\n  },\n  maintext: {\n    fontSize: 16,\n    margin: 20,\n  },\n  barcodebox: {\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    height: 400,\n    width: 300,\n    overflow: \"hidden\",\n    borderRadius: 30,\n  },\n  titleContainer: {\n    display: \"flex\",\n    backgroundColor: \"transparent\",\n    flexDirection: \"row\",\n    justifyContent: \"space-between\",\n    alignItems: \"center\",\n    width: \"65%\",\n    marginBottom: 20,\n  },\n  title: {\n    fontSize: 20,\n  },\n});\n"]},"metadata":{},"sourceType":"module"}