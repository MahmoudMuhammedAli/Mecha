{"ast":null,"code":"import _taggedTemplateLiteralLoose from \"@babel/runtime/helpers/taggedTemplateLiteralLoose\";\n\nvar _jsxFileName = \"D:\\\\ALL LANGs\\\\projects\\\\PokeGameFront\\\\screens\\\\Game.tsx\",\n    _templateObject,\n    _templateObject2;\n\nimport React, { useEffect } from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport tw from \"tailwind-react-native-classnames\";\nimport { StatusBar } from \"expo-status-bar\";\nimport Player2 from \"../components/Player2\";\nimport Player1 from \"../components/Player1\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { CreateGame, setGameActions } from \"../redux/Game\";\nexport default function Game(_ref) {\n  var route = _ref.route,\n      navigation = _ref.navigation;\n\n  var _useSelector = useSelector(function (state) {\n    return state.game;\n  }),\n      player1 = _useSelector.player1;\n\n  var _useSelector2 = useSelector(function (state) {\n    return state.game;\n  }),\n      player2 = _useSelector2.player2;\n\n  var _useSelector3 = useSelector(function (state) {\n    return state.game;\n  }),\n      placeholder = _useSelector3.placeholder;\n\n  var _useSelector4 = useSelector(function (state) {\n    return state.game;\n  }),\n      gameActions = _useSelector4.gameActions;\n\n  var dispatch = useDispatch();\n\n  var flipCard = function flipCard() {\n    if (player1.playCard !== placeholder) {\n      dispatch(setGameActions());\n      console.log(\"game  actions are on!!!!\");\n    } else {\n      console.log(\"game  actions are off!!!!\");\n    }\n  };\n\n  var win1 = function win1() {\n    Alert.alert(\"Player 1 Wins\");\n  };\n\n  var win2 = function win2() {\n    Alert.alert(\"Player 2 Wins\");\n  };\n\n  var endGame = function endGame() {\n    dispatch(CreateGame());\n    navigation.navigate(\"Play\");\n  };\n\n  useEffect(function () {\n    flipCard();\n\n    if (player1.points >= 6) {\n      win1();\n      endGame();\n    }\n\n    if (player2.points >= 6) {\n      win2();\n      endGame();\n    }\n  }, [player1, player2]);\n  return React.createElement(View, {\n    style: tw(_templateObject || (_templateObject = _taggedTemplateLiteralLoose([\"h-full flex flex-col \"]))),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 5\n    }\n  }, React.createElement(Player1, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }\n  }), React.createElement(Image, {\n    style: [styles.logo, tw(_templateObject2 || (_templateObject2 = _taggedTemplateLiteralLoose([\"\"])))],\n    source: require(\"../assets/images/pokeball.png\"),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }\n  }), React.createElement(Player2, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }\n  }), React.createElement(StatusBar, {\n    hidden: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }\n  }));\n}\nvar styles = StyleSheet.create({\n  logo: {\n    width: 70,\n    height: 70,\n    position: \"absolute\",\n    top: \"50%\",\n    left: \"50%\",\n    transform: [{\n      translateX: -35\n    }, {\n      translateY: -32\n    }],\n    zIndex: 99\n  },\n  player2: {\n    backgroundColor: \"#ED5564\",\n    borderTopWidth: 5,\n    borderTopColor: \"#434A54\"\n  }\n});","map":{"version":3,"sources":["D:/ALL LANGs/projects/PokeGameFront/screens/Game.tsx"],"names":["React","useEffect","tw","StatusBar","Player2","Player1","useDispatch","useSelector","CreateGame","setGameActions","Game","route","navigation","state","game","player1","player2","placeholder","gameActions","dispatch","flipCard","playCard","console","log","win1","Alert","alert","win2","endGame","navigate","points","styles","logo","require","StyleSheet","create","width","height","position","top","left","transform","translateX","translateY","zIndex","backgroundColor","borderTopWidth","borderTopColor"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport { View, Text, Image, StyleSheet, Alert } from \"react-native\";\r\nimport { RootTabScreenProps } from \"../types\";\r\nimport tw from \"tailwind-react-native-classnames\";\r\nimport { transform } from \"@babel/core\";\r\nimport { StatusBar } from \"expo-status-bar\";\r\nimport Player2 from \"../components/Player2\";\r\nimport Player1 from \"../components/Player1\";\r\nimport Cards from \"../api/cards\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { RootState } from \"../redux/store\";\r\nimport { CreateGame, flip1, flip2, setGameActions } from \"../redux/Game\";\r\nexport default function Game({\r\n  route,\r\n  navigation,\r\n}: RootTabScreenProps<\"Game\">) {\r\n  const { player1 } = useSelector((state: RootState) => state.game);\r\n  const { player2 } = useSelector((state: RootState) => state.game);\r\n  const { placeholder } = useSelector((state: RootState) => state.game);\r\n  const { gameActions } = useSelector((state: RootState) => state.game);\r\n  const dispatch = useDispatch();\r\n  //todo pick card done in deck.tsx\r\n  //todo flip card\r\n  const flipCard = () => {\r\n    //if player1.playCard is true and player2.playCard is true then set gameActions to true and flip both players cards\r\n    //   add that && player2.playCard !== placeholder\r\n    if (player1.playCard !== placeholder) {\r\n      dispatch(setGameActions());\r\n      console.log(\"game  actions are on!!!!\");\r\n      // dispatch(flip1());\r\n      // dispatch(flip2());\r\n    } else {\r\n      console.log(\"game  actions are off!!!!\");\r\n    }\r\n  };\r\n  //todo attack\r\n  //todo destroy card\r\n  //todo gainPoints\r\n  //todo win\r\n  const win1 = () => {\r\n    Alert.alert(\"Player 1 Wins\");\r\n  };\r\n  const win2 = () => {\r\n    Alert.alert(\"Player 2 Wins\");\r\n  };\r\n  const endGame = () => {\r\n    dispatch(CreateGame());\r\n    navigation.navigate(\"Play\");\r\n  };\r\n  //todo lose\r\n\r\n  useEffect(\r\n    () => {\r\n      flipCard();\r\n      if (player1.points >= 6) {\r\n        win1();\r\n        endGame();\r\n      }\r\n      if (player2.points >= 6) {\r\n        win2();\r\n        endGame();\r\n      }\r\n    },\r\n    [ player1, player2 ]\r\n  );\r\n  return (\r\n    <View style={tw`h-full flex flex-col `}>\r\n      <Player1 />\r\n      <Image\r\n        style={[ styles.logo, tw`` ]}\r\n        source={require(\"../assets/images/pokeball.png\")}\r\n      />\r\n      <Player2 />\r\n      <StatusBar hidden />\r\n    </View>\r\n  );\r\n}\r\nconst styles = StyleSheet.create({\r\n  logo: {\r\n    width: 70,\r\n    height: 70,\r\n    position: \"absolute\",\r\n    top: \"50%\",\r\n    left: \"50%\",\r\n    transform: [ { translateX: -35 }, { translateY: -32 } ],\r\n    zIndex: 99,\r\n  },\r\n  player2: {\r\n    backgroundColor: \"#ED5564\",\r\n    borderTopWidth: 5,\r\n    borderTopColor: \"#434A54\",\r\n  },\r\n});\r\n"]},"metadata":{},"sourceType":"module"}