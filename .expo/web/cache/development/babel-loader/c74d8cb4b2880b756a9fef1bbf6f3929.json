{"ast":null,"code":"import _taggedTemplateLiteralLoose from \"@babel/runtime/helpers/taggedTemplateLiteralLoose\";\nimport _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nvar _jsxFileName = \"D:\\\\ALL LANGs\\\\projects\\\\PokeGameFront\\\\screens\\\\ChooseCard.tsx\",\n    _templateObject,\n    _templateObject2;\n\nimport React, { useEffect, useState } from \"react\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport Card from \"../components/Card\";\nimport tw from \"tailwind-react-native-classnames\";\nimport { SafeAreaView } from \"react-native-safe-area-context\";\nimport { TouchableOpacity } from \"react-native-gesture-handler\";\nimport Cards from \"../api/cards\";\nexport default function Game(_ref) {\n  var _this = this;\n\n  var navigation = _ref.navigation;\n\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      chosenCards = _useState2[0],\n      setChosenCards = _useState2[1];\n\n  var _useState3 = useState(true),\n      _useState4 = _slicedToArray(_useState3, 2),\n      loading = _useState4[0],\n      setLoading = _useState4[1];\n\n  var handleChoice = function handleChoice(id) {\n    chosenCards.length < 6 && setChosenCards([].concat(_toConsumableArray(chosenCards), [id]));\n  };\n\n  useEffect(function () {\n    chosenCards.length >= 6 && navigation.navigate(\"Game\");\n  }, [chosenCards]);\n  return React.createElement(SafeAreaView, {\n    style: styles.container,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 5\n    }\n  }, React.createElement(Text, {\n    style: [tw(_templateObject || (_templateObject = _taggedTemplateLiteralLoose([\"text-2xl  font-bold text-center mt-10\"]))), styles.title],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }\n  }, \"Choose Your Deck\"), React.createElement(Text, {\n    style: [tw(_templateObject2 || (_templateObject2 = _taggedTemplateLiteralLoose([\"  text-gray-200  text-center mb-10 \"])))],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }\n  }, chosenCards.length, \" out of 6\"), React.createElement(FlatList, {\n    style: {\n      marginBottom: 150\n    },\n    numColumns: 2,\n    keyExtractor: function keyExtractor(card) {\n      return card.id;\n    },\n    data: Cards,\n    renderItem: function renderItem(card) {\n      return React.createElement(TouchableOpacity, {\n        style: styles.holder,\n        onPress: function onPress() {\n          return handleChoice(parseInt(card.cardNo));\n        },\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 11\n        }\n      }, \"console.log(card); console.log(card.cardNo)\", React.createElement(Card, {\n        flipped: true,\n        width: \"100%\",\n        height: \"100%\",\n        id: 1,\n        type: card.type,\n        HP: card.HP,\n        cardName: card.cardName,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 13\n        }\n      }));\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }\n  }));\n}\nvar styles = StyleSheet.create({\n  container: {\n    backgroundColor: \"#ce1326\"\n  },\n  title: {\n    fontSize: 30,\n    fontFamily: \"space-mono\",\n    color: \"#fcd116\"\n  },\n  holder: {\n    width: 170,\n    height: 240,\n    margin: 10\n  },\n  scroll: {\n    display: \"flex\",\n    flexDirection: \"row\"\n  }\n});","map":{"version":3,"sources":["D:/ALL LANGs/projects/PokeGameFront/screens/ChooseCard.tsx"],"names":["React","useEffect","useState","Card","tw","SafeAreaView","TouchableOpacity","Cards","Game","navigation","chosenCards","setChosenCards","loading","setLoading","handleChoice","id","length","navigate","styles","container","title","marginBottom","card","holder","parseInt","cardNo","type","HP","cardName","StyleSheet","create","backgroundColor","fontSize","fontFamily","color","width","height","margin","scroll","display","flexDirection"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport {\r\n  View,\r\n  Text,\r\n  Image,\r\n  StyleSheet,\r\n  FlatList,\r\n  ListRenderItemInfo,\r\n} from \"react-native\";\r\nimport { RootTabScreenProps } from \"../types\";\r\nimport Card from \"../components/Card\";\r\nimport tw from \"tailwind-react-native-classnames\";\r\nimport { SafeAreaView } from \"react-native-safe-area-context\";\r\nimport { ScrollView, TouchableOpacity } from \"react-native-gesture-handler\";\r\nimport Loading from \"./Loading\";\r\nimport Cards, { CardsProps } from \"../api/cards\";\r\nexport default function Game({ navigation }: RootTabScreenProps<\"Choose\">) {\r\n  const [ chosenCards, setChosenCards ] = useState<number[]>([]);\r\n  const [ loading, setLoading ] = useState(true);\r\n  const handleChoice = (id: number) => {\r\n    chosenCards.length < 6 && setChosenCards([ ...chosenCards, id ]);\r\n  };\r\n\r\n  useEffect(\r\n    () => {\r\n      chosenCards.length >= 6 && navigation.navigate(\"Game\");\r\n    },\r\n    [ chosenCards ]\r\n  );\r\n  //! if (loading) return <Loading />;\r\n  return (\r\n    <SafeAreaView style={styles.container}>\r\n      <Text style={[ tw`text-2xl  font-bold text-center mt-10`, styles.title ]}>\r\n        Choose Your Deck\r\n      </Text>\r\n      <Text style={[ tw`  text-gray-200  text-center mb-10 ` ]}>\r\n        {chosenCards.length} out of 6\r\n      </Text>\r\n\r\n      <FlatList\r\n        //!temp fix for cards not showing in the bottom\r\n        style={{ marginBottom: 150 }}\r\n        numColumns={2}\r\n        keyExtractor={(card) => card.id}\r\n        data={Cards}\r\n        //! fix the typeScript error \"any\" below\r\n        renderItem={(card: ListRenderItemInfo<CardsProps>) => (\r\n          <TouchableOpacity\r\n            style={styles.holder}\r\n            onPress={() => handleChoice(parseInt(card.cardNo))}\r\n          >\r\n            console.log(card); console.log(card.cardNo)\r\n            <Card\r\n              flipped\r\n              width=\"100%\"\r\n              height=\"100%\"\r\n              id={1}\r\n              type={card.type}\r\n              HP={card.HP}\r\n              cardName={card.cardName}\r\n            />\r\n          </TouchableOpacity>\r\n        )}\r\n      />\r\n    </SafeAreaView>\r\n  );\r\n}\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    backgroundColor: \"#ce1326\",\r\n  },\r\n  title: {\r\n    fontSize: 30,\r\n    fontFamily: \"space-mono\",\r\n    color: \"#fcd116\",\r\n  },\r\n\r\n  holder: {\r\n    width: 170,\r\n    height: 240,\r\n    margin: 10,\r\n  },\r\n  scroll: {\r\n    display: \"flex\",\r\n    flexDirection: \"row\",\r\n  },\r\n});\r\n/*  <div style=\"padding-top:100.000%;position:relative;\"><iframe src=\"https://gifer.com/embed/EXfY\" width=\"100%\" height=\"100%\" style='position:absolute;top:0;left:0;' frameBorder=\"0\" allowFullScreen></iframe></div><p><a href=\"https://gifer.com\">via GIFER</a></p> */\r\n\r\n// // Todo make an abstract card component with id, pic_url, flipped\r\n// // todo for performance, once you have the data for the cards render them out in a flatlist component.\r\n//todo send down a sub array with the chosen cards to the game and render them their again once more using the ids you have\r\n//todo center the items horizontally in the flatlist component.\r\n"]},"metadata":{},"sourceType":"module"}