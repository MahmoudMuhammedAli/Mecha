{"ast":null,"code":"import _taggedTemplateLiteralLoose from \"@babel/runtime/helpers/taggedTemplateLiteralLoose\";\n\nvar _this = this,\n    _jsxFileName = \"D:\\\\ALL LANGs\\\\projects\\\\PokeGameFront\\\\components\\\\GameAction.tsx\",\n    _templateObject,\n    _templateObject2;\n\nimport React from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Toast from \"react-native-simple-toast\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport tw from \"tailwind-react-native-classnames\";\nimport { attack, destroy } from \"../redux/Game\";\n\nvar GameAction = function GameAction(props) {\n  var _useSelector = useSelector(function (state) {\n    return state.game;\n  }),\n      player1 = _useSelector.player1;\n\n  var _useSelector2 = useSelector(function (state) {\n    return state.game;\n  }),\n      player2 = _useSelector2.player2;\n\n  var dispatch = useDispatch();\n  var action = props.action;\n\n  var attacked = function attacked() {\n    if (Math.random() > 0.1) {\n      dispatch(attack(player1.playCard.attack));\n\n      if (player2.playCard.hp <= 0) {\n        dispatch(destroy());\n        Toast.showWithGravity(\"You destroyed the opponent's card\", Toast.SHORT, Toast.TOP);\n      } else {\n        Toast.showWithGravity(\"Attacked successfully!\", Toast.SHORT, Toast.TOP);\n      }\n    } else {\n      Toast.showWithGravity(\"Attack Failed - Better luck next time\", Toast.LONG, Toast.TOP);\n    }\n  };\n\n  return React.createElement(View, {\n    style: tw(_templateObject || (_templateObject = _taggedTemplateLiteralLoose([\"px-4 py-1 mt-3 bg-red-800 text-center rounded border-yellow-300 border-2\"]))),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 5\n    }\n  }, React.createElement(TouchableOpacity, {\n    onPress: function onPress() {\n      attacked();\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }\n  }, React.createElement(Text, {\n    style: tw(_templateObject2 || (_templateObject2 = _taggedTemplateLiteralLoose([\"text-yellow-300 text-base font-bold\"]))),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 9\n    }\n  }, action)));\n};\n\nexport default GameAction;","map":{"version":3,"sources":["D:/ALL LANGs/projects/PokeGameFront/components/GameAction.tsx"],"names":["React","Toast","useDispatch","useSelector","tw","attack","destroy","GameAction","props","state","game","player1","player2","dispatch","action","attacked","Math","random","playCard","hp","showWithGravity","SHORT","TOP","LONG"],"mappings":";;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;;;;AAEA,OAAOC,KAAP,MAAkB,2BAAlB;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,OAAOC,EAAP,MAAe,kCAAf;AACA,SAASC,MAAT,EAAiBC,OAAjB;;AAQA,IAAMC,UAA2B,GAAG,SAA9BA,UAA8B,CAACC,KAAD,EAAW;AAC7C,qBAAoBL,WAAW,CAAC,UAACM,KAAD;AAAA,WAAsBA,KAAK,CAACC,IAA5B;AAAA,GAAD,CAA/B;AAAA,MAAQC,OAAR,gBAAQA,OAAR;;AACA,sBAAoBR,WAAW,CAAC,UAACM,KAAD;AAAA,WAAsBA,KAAK,CAACC,IAA5B;AAAA,GAAD,CAA/B;AAAA,MAAQE,OAAR,iBAAQA,OAAR;;AAEA,MAAMC,QAAQ,GAAGX,WAAW,EAA5B;AACA,MAAQY,MAAR,GAAmBN,KAAnB,CAAQM,MAAR;;AACA,MAAMC,QAAQ,GAAG,SAAXA,QAAW,GAAM;AAErB,QAAIC,IAAI,CAACC,MAAL,KAAgB,GAApB,EAAyB;AACvBJ,MAAAA,QAAQ,CAACR,MAAM,CAACM,OAAO,CAACO,QAAR,CAAiBb,MAAlB,CAAP,CAAR;;AACA,UAAIO,OAAO,CAACM,QAAR,CAAiBC,EAAjB,IAAuB,CAA3B,EAA8B;AAC5BN,QAAAA,QAAQ,CAACP,OAAO,EAAR,CAAR;AACAL,QAAAA,KAAK,CAACmB,eAAN,CACE,mCADF,EAEEnB,KAAK,CAACoB,KAFR,EAGEpB,KAAK,CAACqB,GAHR;AAKD,OAPD,MAOO;AACLrB,QAAAA,KAAK,CAACmB,eAAN,CAAsB,wBAAtB,EAAgDnB,KAAK,CAACoB,KAAtD,EAA6DpB,KAAK,CAACqB,GAAnE;AACD;AACF,KAZD,MAYO;AACLrB,MAAAA,KAAK,CAACmB,eAAN,CACE,uCADF,EAEEnB,KAAK,CAACsB,IAFR,EAGEtB,KAAK,CAACqB,GAHR;AAKD;AAGF,GAvBD;;AAwBA,SACE,oBAAC,IAAD;AACE,IAAA,KAAK,EAAElB,EAAF,kJADP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAGE,oBAAC,gBAAD;AACE,IAAA,OAAO,EAAE,mBAAM;AACbW,MAAAA,QAAQ;AACT,KAHH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAKE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEX,EAAF,+GAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAuDU,MAAvD,CALF,CAHF,CADF;AAaD,CA3CD;;AA4CA,eAAeP,UAAf","sourcesContent":["import React from \"react\";\r\nimport { View, Text, TouchableOpacity } from \"react-native\";\r\nimport Toast from \"react-native-simple-toast\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport tw from \"tailwind-react-native-classnames\";\r\nimport { attack, destroy } from \"../redux/Game\";\r\nimport { RootState } from \"../redux/store\";\r\nimport Player1 from \"./Player1\";\r\ninterface Props {\r\n  action: string;\r\n  disabled?: boolean;\r\n}\r\n\r\nconst GameAction: React.FC<Props> = (props) => {\r\n  const { player1 } = useSelector((state: RootState) => state.game);\r\n  const { player2 } = useSelector((state: RootState) => state.game);\r\n\r\n  const dispatch = useDispatch();\r\n  const { action } = props;\r\n  const attacked = () => {\r\n    //toss a coin to see if the attack is successful\r\n    if (Math.random() > 0.1) {\r\n      dispatch(attack(player1.playCard.attack));\r\n      if (player2.playCard.hp <= 0) {\r\n        dispatch(destroy());\r\n        Toast.showWithGravity(\r\n          \"You destroyed the opponent's card\",\r\n          Toast.SHORT,\r\n          Toast.TOP\r\n        );\r\n      } else {\r\n        Toast.showWithGravity(\"Attacked successfully!\", Toast.SHORT, Toast.TOP);\r\n      }\r\n    } else {\r\n      Toast.showWithGravity(\r\n        \"Attack Failed - Better luck next time\",\r\n        Toast.LONG,\r\n        Toast.TOP\r\n      );\r\n    }\r\n\r\n    //TODO: change turn\r\n  };\r\n  return (\r\n    <View\r\n      style={tw`px-4 py-1 mt-3 bg-red-800 text-center rounded border-yellow-300 border-2`}\r\n    >\r\n      <TouchableOpacity\r\n        onPress={() => {\r\n          attacked();\r\n        }}\r\n      >\r\n        <Text style={tw`text-yellow-300 text-base font-bold`}>{action}</Text>\r\n      </TouchableOpacity>\r\n    </View>\r\n  );\r\n};\r\nexport default GameAction;\r\n"]},"metadata":{},"sourceType":"module"}