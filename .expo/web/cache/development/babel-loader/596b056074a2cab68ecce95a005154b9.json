{"ast":null,"code":"import _taggedTemplateLiteralLoose from \"@babel/runtime/helpers/taggedTemplateLiteralLoose\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nvar _jsxFileName = \"D:\\\\ALL LANGs\\\\projects\\\\PokeGameFront\\\\screens\\\\LoginEmail.tsx\",\n    _templateObject,\n    _templateObject2,\n    _templateObject3,\n    _templateObject4;\n\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport React, { useState } from \"react\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport Pressable from \"react-native-web/dist/exports/Pressable\";\nimport Vibration from \"react-native-web/dist/exports/Vibration\";\nimport { Text, View } from \"../components/Themed\";\nimport tw from \"tailwind-react-native-classnames\";\nimport { TextInput } from \"react-native-gesture-handler\";\nimport axios from \"axios\";\nimport { setCardSet, setToken } from \"../redux/User\";\nimport { useDispatch, useSelector } from \"react-redux\";\nexport default function TabTwoScreen(_ref) {\n  var navigation = _ref.navigation;\n\n  var _useSelector = useSelector(function (state) {\n    return state.user;\n  }),\n      token = _useSelector.token;\n\n  var _useState = useState(\"\"),\n      _useState2 = _slicedToArray(_useState, 2),\n      email = _useState2[0],\n      setEmail = _useState2[1];\n\n  var _useState3 = useState(\"\"),\n      _useState4 = _slicedToArray(_useState3, 2),\n      password = _useState4[0],\n      setPassword = _useState4[1];\n\n  var dispatch = useDispatch();\n\n  var validateEmail = function validateEmail(email) {\n    var re = /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n    return re.test(String(email).toLowerCase());\n  };\n\n  var handleLogin = function handleLogin() {\n    var res, token, userDetails;\n    return _regeneratorRuntime.async(function handleLogin$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return _regeneratorRuntime.awrap(axios.post(\"https://mighty-inlet-28867.herokuapp.com/login\", {\n              email: email,\n              password: password\n            }));\n\n          case 2:\n            res = _context.sent;\n            token = res.data.token;\n            console.log(token);\n            dispatch(setToken(token));\n            _context.prev = 6;\n            _context.next = 9;\n            return _regeneratorRuntime.awrap(axios.get(\"https://mighty-inlet-28867.herokuapp.com/cards\", {\n              headers: {\n                authorization: \"bearer \" + token\n              }\n            }));\n\n          case 9:\n            userDetails = _context.sent;\n            dispatch(setCardSet(userDetails.data));\n            console.log(userDetails.data);\n            _context.next = 17;\n            break;\n\n          case 14:\n            _context.prev = 14;\n            _context.t0 = _context[\"catch\"](6);\n            console.log(_context.t0);\n\n          case 17:\n            if (token) {\n              navigation.navigate(\"Play\");\n              Vibration.vibrate();\n            }\n\n          case 18:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, [[6, 14]], Promise);\n  };\n\n  return React.createElement(View, {\n    style: styles.container,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 5\n    }\n  }, React.createElement(Text, {\n    style: [tw(_templateObject || (_templateObject = _taggedTemplateLiteralLoose([\"text-2xl text-white  mt-20\"]))), styles.compete],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 7\n    }\n  }, \"Login And Play Now!\"), React.createElement(View, {\n    style: [tw(_templateObject2 || (_templateObject2 = _taggedTemplateLiteralLoose([\" absolute bottom-0 w-full flex flex-col  items-center\"]))), styles.bottomCont],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 7\n    }\n  }, React.createElement(Image, {\n    style: styles.image,\n    source: require(\"../assets/images/pikachu.png\"),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 9\n    }\n  }), React.createElement(View, {\n    style: [tw(_templateObject3 || (_templateObject3 = _taggedTemplateLiteralLoose([\" absolute bottom-0 bg-white  flex flex-col justify-center items-center w-full p-20\"]))), styles.bottom],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 9\n    }\n  }, React.createElement(TextInput, {\n    style: styles.input,\n    onChangeText: setEmail,\n    value: email,\n    placeholder: \"Email\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 11\n    }\n  }), React.createElement(TextInput, {\n    style: styles.input,\n    onChangeText: setPassword,\n    value: password,\n    placeholder: \"Password\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 11\n    }\n  }), React.createElement(Pressable, {\n    onPress: function onPress() {\n      handleLogin();\n    },\n    style: function style(_ref2) {\n      var pressed = _ref2.pressed;\n      return [{\n        backgroundColor: pressed ? \"rgb(210, 230, 255)\" : \"#F4FD19\"\n      }, styles.wrapperCustom];\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 11\n    }\n  }, React.createElement(Text, {\n    style: styles.button,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 13\n    }\n  }, \"Log in\")), React.createElement(Pressable, {\n    onPress: function onPress() {\n      navigation.navigate(\"HomeScreen\");\n      Vibration.vibrate();\n    },\n    style: function style(_ref3) {\n      var pressed = _ref3.pressed;\n      return [{}, styles.wrapperCustom, styles.logQr];\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 11\n    }\n  }, React.createElement(Text, {\n    style: [styles.buttonQR, tw(_templateObject4 || (_templateObject4 = _taggedTemplateLiteralLoose([\"text-gray-700 \"])))],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 13\n    }\n  }, \"Sign with QR Code\")))));\n}\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    alignItems: \"center\",\n    backgroundColor: \" rgb(255,62,62))\"\n  },\n  title: {\n    fontSize: 20,\n    fontWeight: \"bold\"\n  },\n  compete: {\n    fontSize: 28,\n    fontFamily: \"space-mono\",\n    fontWeight: \"bold\"\n  },\n  image: {\n    width: 130,\n    height: 130\n  },\n  wrapperCustom: {\n    borderRadius: 15,\n    textAlign: \"center\"\n  },\n  button: {\n    backgroundColor: \"#fff01b\",\n    padding: 10,\n    paddingHorizontal: 20,\n    borderRadius: 15\n  },\n  buttonQR: {\n    padding: 3,\n    borderBottomWidth: 1,\n    paddingHorizontal: 15,\n    borderRadius: 15\n  },\n  input: {\n    height: 40,\n    width: 250,\n    margin: 12,\n    borderWidth: 1,\n    padding: 10,\n    borderRadius: 15\n  },\n  bottomCont: {\n    backgroundColor: \" rgb(255,62,62))\",\n    height: \"53%\"\n  },\n  bottom: {\n    borderTopRightRadius: 40,\n    borderTopLeftRadius: 40\n  },\n  logQr: {\n    position: \"absolute\",\n    bottom: 5\n  }\n});","map":{"version":3,"sources":["D:/ALL LANGs/projects/PokeGameFront/screens/LoginEmail.tsx"],"names":["React","useState","Text","View","tw","TextInput","axios","setCardSet","setToken","useDispatch","useSelector","TabTwoScreen","navigation","state","user","token","email","setEmail","password","setPassword","dispatch","validateEmail","re","test","String","toLowerCase","handleLogin","post","res","data","console","log","get","headers","authorization","userDetails","navigate","Vibration","vibrate","styles","container","compete","bottomCont","image","require","bottom","input","pressed","backgroundColor","wrapperCustom","button","logQr","buttonQR","StyleSheet","create","flex","alignItems","title","fontSize","fontWeight","fontFamily","width","height","borderRadius","textAlign","padding","paddingHorizontal","borderBottomWidth","margin","borderWidth","borderTopRightRadius","borderTopLeftRadius","position"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\r\nimport {\r\n  StyleSheet,\r\n  ImageBackground,\r\n  Button,\r\n  Alert,\r\n  Image,\r\n  Pressable,\r\n  Vibration,\r\n} from \"react-native\";\r\n\r\nimport { Text, View } from \"../components/Themed\";\r\nimport tw from \"tailwind-react-native-classnames\";\r\nimport { TextInput } from \"react-native-gesture-handler\";\r\nimport { RootTabScreenProps } from \"../types\";\r\nimport axios from \"axios\";\r\nimport { setCardSet, setToken } from \"../redux/User\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { RootState } from \"../redux/store\";\r\nexport default function TabTwoScreen({\r\n  navigation,\r\n}: RootTabScreenProps<\"TabTwo\">) {\r\n  const { token } = useSelector((state: RootState) => state.user);\r\n\r\n  const [ email, setEmail ] = useState(\"\");\r\n  const [ password, setPassword ] = useState(\"\");\r\n  const dispatch = useDispatch();\r\n  //TODO: validate the email in the front end before sending it to the server. disabled during development.\r\n  const validateEmail = (email: string) => {\r\n    const re = /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\r\n    return re.test(String(email).toLowerCase());\r\n  };\r\n\r\n  const handleLogin = async () => {\r\n    const res = await axios.post(\r\n      \"https://mighty-inlet-28867.herokuapp.com/login\",\r\n      {\r\n        email,\r\n        password,\r\n      }\r\n    );\r\n    const token = res.data.token;\r\n    console.log(token);\r\n    dispatch(setToken(token));\r\n\r\n    // try {\r\n    //   const userDetails = await axios.get(\r\n    //     \"https://mighty-inlet-28867.herokuapp.com/users\",\r\n    //     {\r\n    //       headers: {\r\n    //         authorization: `bearer ${token}`,\r\n    //       },\r\n    //     }\r\n    //   );\r\n    //   console.log(userDetails.data);\r\n    // } catch (err) {\r\n    //   console.log(err);\r\n    // }\r\n    try {\r\n      const userDetails = await axios.get(\r\n        \"https://mighty-inlet-28867.herokuapp.com/cards\",\r\n        {\r\n          headers: {\r\n            authorization: `bearer ${token}`,\r\n          },\r\n        }\r\n      );\r\n      dispatch(setCardSet(userDetails.data));\r\n      console.log(userDetails.data);\r\n    } catch (err) {\r\n      console.log(err);\r\n    }\r\n\r\n    //Navigation after getting the data\r\n    if (token) {\r\n      navigation.navigate(\"Play\");\r\n      Vibration.vibrate();\r\n    }\r\n  };\r\n\r\n  return (\r\n    <View style={styles.container}>\r\n      <Text style={[ tw`text-2xl text-white  mt-20`, styles.compete ]}>\r\n        Login And Play Now!\r\n      </Text>\r\n      <View\r\n        style={[\r\n          tw` absolute bottom-0 w-full flex flex-col  items-center`,\r\n          styles.bottomCont,\r\n        ]}\r\n      >\r\n        <Image\r\n          style={styles.image}\r\n          source={require(\"../assets/images/pikachu.png\")}\r\n        />\r\n        <View\r\n          style={[\r\n            tw` absolute bottom-0 bg-white  flex flex-col justify-center items-center w-full p-20`,\r\n            styles.bottom,\r\n          ]}\r\n        >\r\n          <TextInput\r\n            style={styles.input}\r\n            onChangeText={setEmail}\r\n            value={email}\r\n            placeholder=\"Email\"\r\n          />\r\n          <TextInput\r\n            style={styles.input}\r\n            onChangeText={setPassword}\r\n            value={password}\r\n            placeholder=\"Password\"\r\n          />\r\n\r\n          <Pressable\r\n            onPress={() => {\r\n              handleLogin();\r\n            }}\r\n            style={({ pressed }) => [\r\n              {\r\n                backgroundColor: pressed ? \"rgb(210, 230, 255)\" : \"#F4FD19\",\r\n              },\r\n              styles.wrapperCustom,\r\n            ]}\r\n          >\r\n            <Text style={styles.button}>Log in</Text>\r\n          </Pressable>\r\n\r\n          <Pressable\r\n            onPress={() => {\r\n              navigation.navigate(\"HomeScreen\");\r\n              Vibration.vibrate();\r\n            }}\r\n            style={({ pressed }) => [ {}, styles.wrapperCustom, styles.logQr ]}\r\n          >\r\n            <Text style={[ styles.buttonQR, tw`text-gray-700 ` ]}>\r\n              Sign with QR Code\r\n            </Text>\r\n          </Pressable>\r\n        </View>\r\n      </View>\r\n    </View>\r\n  );\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    alignItems: \"center\",\r\n    backgroundColor: \" rgb(255,62,62))\",\r\n  },\r\n\r\n  title: {\r\n    fontSize: 20,\r\n    fontWeight: \"bold\",\r\n  },\r\n  compete: {\r\n    fontSize: 28,\r\n    fontFamily: \"space-mono\",\r\n    // color: \"#fcd116\",\r\n    fontWeight: \"bold\",\r\n  },\r\n\r\n  image: {\r\n    width: 130,\r\n    height: 130,\r\n  },\r\n  wrapperCustom: {\r\n    borderRadius: 15,\r\n    textAlign: \"center\",\r\n  },\r\n  button: {\r\n    backgroundColor: \"#fff01b\",\r\n    padding: 10,\r\n    paddingHorizontal: 20,\r\n    borderRadius: 15,\r\n  },\r\n  buttonQR: {\r\n    padding: 3,\r\n    borderBottomWidth: 1,\r\n    paddingHorizontal: 15,\r\n    borderRadius: 15,\r\n  },\r\n  input: {\r\n    height: 40,\r\n    width: 250,\r\n    margin: 12,\r\n    borderWidth: 1,\r\n    padding: 10,\r\n    borderRadius: 15,\r\n  },\r\n  bottomCont: {\r\n    backgroundColor: \" rgb(255,62,62))\",\r\n    height: \"53%\",\r\n  },\r\n  bottom: {\r\n    borderTopRightRadius: 40,\r\n    borderTopLeftRadius: 40,\r\n  },\r\n  logQr: {\r\n    position: \"absolute\",\r\n    bottom: 5,\r\n  },\r\n});\r\n"]},"metadata":{},"sourceType":"module"}