{"ast":null,"code":"import _taggedTemplateLiteralLoose from \"@babel/runtime/helpers/taggedTemplateLiteralLoose\";\n\nvar _this = this,\n    _jsxFileName = \"D:\\\\ALL LANGs\\\\projects\\\\PokeGameFront\\\\components\\\\Card.tsx\",\n    _templateObject,\n    _templateObject2;\n\nimport React from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport ImageBackground from \"react-native-web/dist/exports/ImageBackground\";\nimport tw from \"tailwind-react-native-classnames\";\n\nvar Fire = require(\"../assets/images/Fire.png\");\n\nvar Water = require(\"../assets/images/Water.png\");\n\nvar Colorless = require(\"../assets/images/Colorless.png\");\n\nvar Psychic = require(\"../assets/images/Psychic.png\");\n\nvar cardback = require(\"../assets/images/cardback.png\");\n\nvar Card = function Card(Props) {\n  var width = Props.width,\n      height = Props.height,\n      id = Props.id,\n      flipped = Props.flipped,\n      type = Props.type,\n      HP = Props.HP,\n      attack = Props.attack,\n      cardName = Props.cardName;\n\n  var getBackground = function getBackground() {\n    switch (type) {\n      case \"Fire\":\n        return Fire;\n\n      case \"Water\":\n        return Water;\n\n      case \"Psychic\":\n        return Psychic;\n\n      case \"Phsychic\":\n        return Psychic;\n\n      case \"Colorless\":\n        return Colorless;\n\n      default:\n        return cardback;\n    }\n  };\n\n  return React.createElement(View, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 5\n    }\n  }, flipped ? React.createElement(View, {\n    style: [{\n      width: width,\n      height: height\n    }],\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 9\n    }\n  }, React.createElement(ImageBackground, {\n    style: [styles.cardFace, tw(_templateObject || (_templateObject = _taggedTemplateLiteralLoose([\"relative\"])))],\n    source: getBackground(),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 11\n    }\n  }, type !== \"cardBack\" && React.createElement(View, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 15\n    }\n  }, React.createElement(Text, {\n    style: [tw(_templateObject2 || (_templateObject2 = _taggedTemplateLiteralLoose([\"text-right  font-bold text-black text-xs  \"]))), styles.hp],\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 17\n    }\n  }, HP), React.createElement(Text, {\n    style: [styles.attack],\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 17\n    }\n  }, \"Attack :\", attack)))) : React.createElement(Image, {\n    style: [{\n      width: width,\n      height: height\n    }],\n    source: require(\"../assets/images/cardback.png\"),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 9\n    }\n  }));\n};\n\nvar styles = StyleSheet.create({\n  cardFace: {\n    width: \"100%\",\n    height: \"100%\",\n    position: \"relative\"\n  },\n  hp: {\n    marginTop: \"2%\",\n    marginRight: \"15%\"\n  },\n  attack: {\n    marginTop: \"70%\",\n    marginLeft: \"10%\"\n  }\n});\nexport default Card;","map":{"version":3,"sources":["D:/ALL LANGs/projects/PokeGameFront/components/Card.tsx"],"names":["React","tw","Fire","require","Water","Colorless","Psychic","cardback","Card","Props","width","height","id","flipped","type","HP","attack","cardName","getBackground","styles","cardFace","hp","StyleSheet","create","position","marginTop","marginRight","marginLeft"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport {\r\n  View,\r\n  Text,\r\n  Image,\r\n  StyleSheet,\r\n  TouchableOpacity,\r\n  ImageBackground,\r\n} from \"react-native\";\r\nimport tw from \"tailwind-react-native-classnames\";\r\nimport { attack } from \"../redux/Game\";\r\nconst Fire = require(\"../assets/images/Fire.png\");\r\nconst Water = require(\"../assets/images/Water.png\");\r\nconst Colorless = require(\"../assets/images/Colorless.png\");\r\nconst Psychic = require(\"../assets/images/Psychic.png\");\r\nconst cardback = require(\"../assets/images/cardback.png\");\r\n\r\n//TODO change ID to order\r\ninterface Props {\r\n  width: string | number;\r\n  order?: number;\r\n  height: string | number;\r\n  id: number;\r\n  deck?: boolean;\r\n  flipped?: boolean;\r\n  //data\r\n  cardName: string;\r\n  type: string;\r\n  HP: number;\r\n  attack: number;\r\n}\r\nconst Card: React.FC<Props> = (Props) => {\r\n  const { width, height, id, flipped, type, HP, attack, cardName } = Props;\r\n  // const background = require(`../assets/images/${type}.png`);\r\n  const getBackground = () => {\r\n    switch (type) {\r\n      case \"Fire\":\r\n        return Fire;\r\n\r\n      case \"Water\":\r\n        return Water;\r\n      case \"Psychic\":\r\n        return Psychic;\r\n\r\n      case \"Phsychic\":\r\n        return Psychic;\r\n\r\n      case \"Colorless\":\r\n        return Colorless;\r\n      default:\r\n        return cardback;\r\n    }\r\n  };\r\n  return (\r\n    <View>\r\n      {flipped ? (\r\n        <View style={[ { width, height } ]}>\r\n          <ImageBackground\r\n            style={[ styles.cardFace, tw`relative` ]}\r\n            source={getBackground()}\r\n          >\r\n            {type !== \"cardBack\" && (\r\n              <View>\r\n                <Text\r\n                  style={[\r\n                    tw`text-right  font-bold text-black text-xs  `,\r\n                    styles.hp,\r\n                  ]}\r\n                >\r\n                  {HP}\r\n                </Text>\r\n                <Text style={[ styles.attack ]}>Attack :{attack}</Text>\r\n              </View>\r\n            )}\r\n          </ImageBackground>\r\n        </View>\r\n      ) : (\r\n        <Image\r\n          style={[\r\n            { width, height },\r\n            // { transform: [ { translateX: deck ? order * -50 : 0 } ] },\r\n          ]}\r\n          source={require(\"../assets/images/cardback.png\")}\r\n        />\r\n      )}\r\n    </View>\r\n  );\r\n};\r\nconst styles = StyleSheet.create({\r\n  cardFace: {\r\n    width: \"100%\",\r\n    height: \"100%\",\r\n    position: \"relative\",\r\n  },\r\n\r\n  hp: {\r\n    marginTop: \"2%\",\r\n    marginRight: \"15%\",\r\n  },\r\n  attack: {\r\n    marginTop: \"70%\",\r\n    marginLeft: \"10%\",\r\n  },\r\n});\r\n\r\nexport default Card;\r\n"]},"metadata":{},"sourceType":"module"}