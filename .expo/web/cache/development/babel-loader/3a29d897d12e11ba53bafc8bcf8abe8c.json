{"ast":null,"code":"import { createSlice } from '@reduxjs/toolkit';\nimport Cards from \"../api/cards\";\nvar initialState = {\n  cardSet: Cards,\n  token: \"\",\n  name: \"\",\n  email: \"\",\n  userID: \"\",\n  points: 0\n};\nexport var userSlice = createSlice({\n  name: 'user',\n  initialState: initialState,\n  reducers: {\n    setToken: function setToken(state, action) {\n      state.token = action.payload;\n    },\n    setCardSet: function setCardSet(state, action) {\n      state.cardSet = action.payload;\n    }\n  }\n});\nvar _userSlice$actions = userSlice.actions,\n    setToken = _userSlice$actions.setToken,\n    setCardSet = _userSlice$actions.setCardSet;\nexport { setToken, setCardSet };\nexport default userSlice.reducer;","map":{"version":3,"sources":["D:/ALL LANGs/projects/PokeGameFront/redux/User.ts"],"names":["createSlice","Cards","initialState","cardSet","token","name","email","userID","points","userSlice","reducers","setToken","state","action","payload","setCardSet","actions","reducer"],"mappings":"AAAA,SAASA,WAAT,QAA2C,kBAA3C;AACA,OAAOC,KAAP;AAUA,IAAMC,YAAmB,GAAG;AAC1BC,EAAAA,OAAO,EAAEF,KADiB;AAE1BG,EAAAA,KAAK,EAAC,EAFoB;AAG1BC,EAAAA,IAAI,EAAC,EAHqB;AAI1BC,EAAAA,KAAK,EAAC,EAJoB;AAK1BC,EAAAA,MAAM,EAAC,EALmB;AAM1BC,EAAAA,MAAM,EAAC;AANmB,CAA5B;AAUA,OAAO,IAAMC,SAAS,GAAGT,WAAW,CAAC;AACnCK,EAAAA,IAAI,EAAE,MAD6B;AAEnCH,EAAAA,YAAY,EAAZA,YAFmC;AAGnCQ,EAAAA,QAAQ,EAAE;AACVC,IAAAA,QAAQ,EAAG,kBAACC,KAAD,EAAUC,MAAV,EAA2C;AACpDD,MAAAA,KAAK,CAACR,KAAN,GAAcS,MAAM,CAACC,OAArB;AACD,KAHS;AAKVC,IAAAA,UAAU,EAAG,oBAACH,KAAD,EAAUC,MAAV,EAAiD;AAC5DD,MAAAA,KAAK,CAACT,OAAN,GAAgBU,MAAM,CAACC,OAAvB;AACD;AAPS;AAHyB,CAAD,CAA7B;AAcA,yBAA+BL,SAAS,CAACO,OAAzC;AAAA,IAAOL,QAAP,sBAAOA,QAAP;AAAA,IAAgBI,UAAhB,sBAAgBA,UAAhB;;AAEP,eAAeN,SAAS,CAACQ,OAAzB","sourcesContent":["import { createSlice, PayloadAction } from '@reduxjs/toolkit'\r\nimport Cards, { CardsProps } from \"../api/cards\"\r\n\r\nexport interface user {\r\n cardSet: CardsProps[]; \r\n token : string;\r\n name: string;\r\n email: string;\r\n userID: string;\r\n points : number; \r\n}\r\nconst initialState : user = {\r\n  cardSet: Cards , \r\n  token:\"\", \r\n  name:\"\", \r\n  email:\"\", \r\n  userID:\"\", \r\n  points:0,\r\n\r\n}\r\n\r\nexport const userSlice = createSlice({\r\n  name: 'user',\r\n  initialState,\r\n  reducers: {\r\n  setToken : (state  , action: PayloadAction<string>) =>{\r\n    state.token = action.payload; \r\n  }\r\n  ,\r\n  setCardSet : (state  , action: PayloadAction<CardsProps[]>) =>{\r\n    state.cardSet = action.payload; \r\n  }\r\n  },\r\n})\r\n\r\nexport const {setToken,setCardSet } = userSlice.actions\r\n\r\nexport default userSlice.reducer"]},"metadata":{},"sourceType":"module"}